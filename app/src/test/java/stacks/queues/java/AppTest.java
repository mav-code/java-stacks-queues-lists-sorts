/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package stacks.queues.java;

import org.junit.Test;
import static org.junit.Assert.*;

public class AppTest {
    @Test public void testAppHasAGreeting() {
        App classUnderTest = new App();
        assertNotNull("app should have a greeting", classUnderTest.getGreeting());
    }

    @Test
    public void isInitializedEmpty() {
        MyQueue queue = new MyQueue();
        assertTrue( "Queue is initialized empty", queue.getHead() == null);
    }

    @Test
    public void CanCallIsEmpty(){
        MyQueue queue = new MyQueue();
        assertTrue( "Queue is initialized empty", queue.isEmpty());
    }

    @Test
    public void canCreateNode(){
        MyNode node = new MyNode(3);
        assertNotNull("can create new Node object", node);
    }

    @Test
    public void addItemToQueue() {
        MyQueue queue = new MyQueue();
        queue.add(5);
        assertNotNull( "Node added to empty queue becomes head", queue.getHead());
    }

    @Test
    public void canPeek(){
        MyQueue queue = new MyQueue();
        queue.add(5);
        assertEquals( "Can peek at first item in queue", 5, queue.peek());
    }

    @Test
    public void canPeekEmptyQueue(){
        MyQueue queue = new MyQueue();
        assertNull("Peeking empty queue returns null", queue.peek());
    }

    @Test
    public void removeItemFromQueue(){
//        Integer first = 5;
//        Integer second = 7;
//        Integer third = 9;
//        Integer expected = 5;
        MyQueue queue = new MyQueue();
        queue.add(5);
        queue.add(7);
        queue.add(9);
        assertEquals("Node added to queue has correct value", 5, queue.remove());
    }

    @Test
    public void removeLastItemFromQueue(){
        MyQueue queue = new MyQueue();
        queue.add(5);
        queue.remove();
        assertNull("Tail is null when last item is removed", queue.getTail());
        assertNull("Head is null when last item is removed", queue.getHead());

    }


//    @Test
//    public void removeItemFromEmptyQueue(){
//        MyQueue queue = new MyQueue();
//        assertEquals("null result when removing item from empty queue", null, queue.remove());
//    }

}
